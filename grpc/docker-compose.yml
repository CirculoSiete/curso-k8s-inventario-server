version: '3.3'
services:
  db:
    build: postgres
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
  adminer:
    image: adminer:4.3.1
    ports:
       - 8080:8080
  rabbitmq:
    image: rabbitmq:3.6.12-management
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      # Por default, RabbitMQ en Docker, escribe el log en la salida estandar.
      # Lo siguiente es para escribir los logs en archivos y evitar llenar la pantalla de logs.
      RABBITMQ_LOGS: /var/log/rabbitmq/rabbit.log
      RABBITMQ_SASL_LOGS: /var/log/rabbitmq/rabbit-sasl.log
  inventarioserver:
    build: build/libs
    ports:
      - 6565:6565
      - 8082:8081
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/warehouse
      VALIDATION-SVC_HOSTNAME: inventariovalidacion
      VALIDATION-SVC_PORT: 7000
      ZIPKIN-SVC_HOSTNAME: zipkin
  productRestGateway:
    image: circulo7/cursos-k8s-product-rest-gateway:0.0.1-snapshot
    ports:
      - 9090:9090
    environment:
      PRODUCT_SVC_HOSTNAME: inventarioserver
  inventariovalidacion:
    image: circulo7/cursos-k8s-inventario-validacion:1.0-snapshot
    ports:
      - 7000:7000
      - 8081:8081
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      GRPC_PORT: 7000
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/warehouse
  zipkin:
    image: openzipkin/zipkin:2.2.1
    volumes:
      - ./data/zipkin:/usr/share/zipkin/data
    ports:
      - 9411:9411
  nginx:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8787:80
  adminfrontend:
    image: circulo7/cursos-k8s-admin-frontend
    ports:
      - 3030:3030